#  ================ Frontend –ß–∞—Å—Ç—å ====================
from vkbottle.bot import Bot, Message
from vkbottle import Keyboard, KeyboardButtonColor, Text, BaseStateGroup
import re
from token_set import bot_group_id, bot_token
from vkinder.db.interface_db import insert_new_user, is_found_exists, insert_new_found, add_favourites, view_favourites
from auxiliary_functions import search_people, best_photo, parse_date, calc_age, id_people, AGE, SEX, bp

vk = Bot(bot_token, bot_group_id)

# ======= –°–ø–∏—Å–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —á–µ–ª–æ–≤–µ–∫–µ ========
you_sex = []
you_age = []
you_city = []


class CreateAnketa(BaseStateGroup):
    SEARCH = 0
    NAME = 1
    INFO = 2
    INFO1 = 3
    INFO2 = 4
    INFO3 = 5


@vk.on.private_message(lev=["–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ üîé"])
async def create_anket(message: Message):
    user_info_sex = await vk.api.users.get(message.from_id, 'sex')
    user_info_bdate = await vk.api.users.get(message.from_id, 'bdate')
    user_info_city = await vk.api.users.get(message.from_id, 'city')

    if user_info_bdate[0].bdate is None or user_info_sex[0].sex is None or user_info_city[0].city is None:
        await message.answer(message=f"–û —Ç–µ–±–µ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –¥–∞–≤–∞–π –µ—ë –Ω–µ–º–Ω–æ–≥–æ –∑–∞–ø–æ–ª–Ω–∏–º!", keyboard=(
            Keyboard(one_time=True, inline=False)
            .add(Text('–ó–∞–ø–æ–ª–Ω–∏—Ç—å'), color=KeyboardButtonColor.POSITIVE)
        ))
        await vk.state_dispenser.set(message.peer_id, CreateAnketa.INFO)
        return "–î–∞–≤–∞–π –∑–∞–ø–æ–ª–Ω–∏–º!"

    else:
        you_city.append(user_info_city[0].city.title)
        you_age.append(user_info_bdate[0].bdate)
        if str(user_info_sex[0].sex) == "BaseSex.male":
            SEX.append(1)
            await message.answer(
                message=f"–í–æ—Ç –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–±–µ: \n–ü–æ–ª: –ú—É–∂—Å–∫–æ–π\n–í–æ–∑—Ä–∞—Å—Ç: {user_info_bdate[0].bdate}\n–¢–≤–æ–π –≥–æ—Ä–æ–¥: {user_info_city[0].city.title}",
                keyboard=(
                    Keyboard(one_time=True, inline=False)
                    .add(Text('–î–∞'), color=KeyboardButtonColor.POSITIVE)
                    .add(Text('–ò–∑–º–µ–Ω–∏—Ç—å'), color=KeyboardButtonColor.POSITIVE)))
        else:
            SEX.append(2)
            await message.answer(
                message=f"–í–æ—Ç –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–±–µ: \n–ü–æ–ª: –ñ–µ–Ω—Å–∫–∏–π\n–í–æ–∑—Ä–∞—Å—Ç:{user_info_bdate[0].bdate}\n–¢–≤–æ–π –≥–æ—Ä–æ–¥:{user_info_city[0].city.title}",
                keyboard=(
                    Keyboard(one_time=True, inline=False)
                    .add(Text('–î–∞'), color=KeyboardButtonColor.POSITIVE)
                    .add(Text('–ò–∑–º–µ–Ω–∏—Ç—å'), color=KeyboardButtonColor.POSITIVE)))
        await vk.state_dispenser.set(message.peer_id, CreateAnketa.SEARCH)
        return "–í—Å—ë –≤–µ—Ä–Ω–æ?"


@vk.on.private_message(state=CreateAnketa.INFO)
async def anceta_name(message: Message):
    await message.answer(
        message="–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–ª:",
        keyboard=(
            Keyboard(one_time=True, inline=False)
            .add(Text("–Ø –ø–∞—Ä–µ–Ω—å"), color=KeyboardButtonColor.POSITIVE)
            .add(Text("–Ø –¥–µ–≤—É—à–∫–∞"), color=KeyboardButtonColor.POSITIVE)
        ))
    await vk.state_dispenser.set(message.peer_id, CreateAnketa.INFO1)
    return "–ü–æ–∏—Å–∫ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –±—É–¥–µ—Ç –ø–æ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–º—É –ø–æ–ª—É"


@vk.on.private_message(state=CreateAnketa.INFO1)
async def anceta_name(message: Message):
    if message.text == "–Ø –ø–∞—Ä–µ–Ω—å":
        you_sex.append("–ú—É–∂—Å–∫–æ–π")
        SEX.append(1)
        await vk.state_dispenser.set(message.peer_id, CreateAnketa.INFO2)
        return "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: 12.5.2001"
    elif message.text == "–Ø –¥–µ–≤—É—à–∫–∞":
        you_sex.append("–ñ–µ–Ω—Å–∫–∏–π")
        SEX.append(2)
        await vk.state_dispenser.set(message.peer_id, CreateAnketa.INFO2)
        return "–ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: 12.5.2001"
    else:
        await message.answer(message="–ù–µ –∫–æ—Ä–µ–∫—Ç–Ω–æ",
                             keyboard=(Keyboard(one_time=True, inline=False)
                                       .add(Text("–•–æ—Ä–æ—à–æ"), color=KeyboardButtonColor.POSITIVE)))
        await vk.state_dispenser.set(message.peer_id, CreateAnketa.INFO)
        return "–í—ã–±–µ—Ä–∏ –ø–æ–ª –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ"


@vk.on.private_message(state=CreateAnketa.INFO2)
async def anceta_name(message: Message):
    age = re.findall(r"[0-9.]", message.text)
    if age == []:
        await vk.state_dispenser.set(message.peer_id, CreateAnketa.INFO2)
        return "–¢—ã –∑–∞–ø–∏—Å–∞–ª –Ω–µ –≤ —Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (\n–ù–∞–¥–æ —Ç–∞–∫: 12.5.2001"
    else:
        you_age.append(message.text)
        await vk.state_dispenser.set(message.peer_id, CreateAnketa.INFO3)
        return "–û—Ç–ª–∏—á–Ω–æ!\n–¢–µ–ø–µ—Ä—å –∑–∞–ø–∏—à–∏ —Å–≤–æ–π –≥–æ—Ä–æ–¥!"


@vk.on.private_message(state=CreateAnketa.INFO3)
async def anceta_name(message: Message):
    city = re.findall(r"[–∞-—è—ë–ê-–Ø–Å-]", message.text)
    if city == []:
        await vk.state_dispenser.set(message.peer_id, CreateAnketa.INFO3)
        return f"–¢—ã –∑–∞–ø–∏—Å–∞–ª –Ω–µ –≤ —Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ\n–ó–∞–ø–∏—à–∏ —Å–≤–æ–π –≥–æ—Ä–æ–¥ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤"
    else:
        you_city.append(message.text)

        await message.answer(
            message=f"–í–æ—Ç –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–±–µ: \n–ü–æ–ª: {you_sex[-1]}\n–í–æ–∑—Ä–∞—Å—Ç: {you_age[-1]}\n–¢–≤–æ–π –≥–æ—Ä–æ–¥: {message.text}",
            keyboard=(
                Keyboard(one_time=True, inline=False)
                .add(Text("–î–∞"), color=KeyboardButtonColor.POSITIVE)
                .add(Text("–ò–∑–º–µ–Ω–∏—Ç—å"), color=KeyboardButtonColor.POSITIVE)))
        await vk.state_dispenser.set(message.peer_id, CreateAnketa.SEARCH)
        return f"–í—Å—ë –≤–µ—Ä–Ω–æ?"


@vk.on.private_message(state=CreateAnketa.SEARCH)
async def anceta_name(message: Message):
    AGE.append(calc_age(parse_date(f"{you_age[-1]}", fmt='%d.%m.%Y')))
    search_people(you_city[-1])

    if message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å ‚≠ê":
        a = view_favourites(message.from_id)
        if a is None:
            return "–í–∞—à —Å–ø–∏—Å–æ–∫ —Ñ–∞–≤–æ—Ä–∏—Ç–æ–≤ –ø–æ–∫–∞ –ø—É—Å—Ç, –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å"
        else:
            for all in a:
                user_photo = await vk.api.users.get(all[0], "photo_id")

                photo_id = user_photo[0].photo_id

                await message.answer(message=f"""–ò–º—è –§–∞–º–∏–ª–∏—è: {all[2]} {all[3]}
–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: vk.com/id{all[0]}
–ì–æ—Ä–æ–¥: {all[6]}
–í–æ–∑—Ä–∞—Å—Ç: {all[4]}""",
                    attachment=f"photo{photo_id}")

            await vk.state_dispenser.set(message.peer_id, CreateAnketa.SEARCH)
            return "üëé-–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å\n‚≠ê-–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"

    elif message.text == "üëé" or message.text.upper() == "–î–ê" or message.text == "‚≠ê":
        if is_found_exists(message.from_id, id_people[0]) is None:
            user_name = await vk.api.users.get(id_people[0])
            user_age = await vk.api.users.get(id_people[0], "bdate")
            user_sex = await vk.api.users.get(id_people[0], "sex")
            user_city = await vk.api.users.get(id_people[0], "city")

            if len(user_age[0].bdate) >= 8:
                people_age = int(calc_age(parse_date(f"{user_age[0].bdate}", fmt='%d.%m.%Y')))
            else:
                people_age = 0

            if user_city[0].city is None:
                insert_new_found(message.from_id, id_people[0], user_name[0].first_name, user_name[0].last_name,
                                 people_age, user_sex[0].sex, "")
            else:
                insert_new_found(message.from_id, id_people[0], user_name[0].first_name, user_name[0].last_name,
                                 people_age, user_sex[0].sex, user_city[0].city.title)

            if message.text == "‚≠ê":
                add_favourites(message.from_id, id_people[0])
            best_photo(user_name[0].id)
            # ========== –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ============
            await message.answer(message=f"""
–ò–º—è –§–∞–º–∏–ª–∏—è: {user_name[0].first_name} {user_name[0].last_name}
–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: vk.com/id{id_people[0]}""",
                 keyboard=(Keyboard(one_time=False, inline=False)
                           .add(Text('üëé'), color=KeyboardButtonColor.NEGATIVE)
                           .add(Text('‚≠ê'), color=KeyboardButtonColor.POSITIVE)
                           .row()
                           .add(Text('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å ‚≠ê'), color=KeyboardButtonColor.POSITIVE)))
            for id_photo in bp[0]:
                await message.answer(attachment=f"photo{user_name[0].id}_{id_photo}")
            await vk.state_dispenser.set(message.peer_id, CreateAnketa.SEARCH)
            id_people.pop(0), bp.pop()
            return "üëé-–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å\n‚≠ê-–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"
        else:
            id_people.pop(0)
            while is_found_exists(message.from_id, id_people[0]) is not None:
                id_people.pop(0)
            await message.answer(message="–ò–¥—ë—Ç –ø–æ–∏—Å–∫!",
                                 keyboard=(Keyboard(one_time=False, inline=False)
                                           .add(Text('–î–ê'), color=KeyboardButtonColor.POSITIVE)))
            await vk.state_dispenser.set(message.peer_id, CreateAnketa.SEARCH)
            return "–ù–∞–∂–º–∏ –î–ê –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è"

    elif message.text == "–ò–∑–º–µ–Ω–∏—Ç—å":
        await message.answer(
            message=f"–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø–æ–ª:",
            keyboard=(
                Keyboard(one_time=True, inline=False)
                .add(Text("–Ø –ø–∞—Ä–µ–Ω—å"), color=KeyboardButtonColor.POSITIVE)
                .add(Text("–Ø –¥–µ–≤—É—à–∫–∞"), color=KeyboardButtonColor.POSITIVE)
            ))
        await vk.state_dispenser.set(message.peer_id, CreateAnketa.INFO1)
        id_people.pop()
        return "–ü–æ–∏—Å–∫ –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –±—É–¥–µ—Ç –ø–æ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–º—É –ø–æ–ª—É"

    else:
        await message.answer(message="–Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã(", keyboard=(
            Keyboard(one_time=False, inline=False)
            .add(Text('üëé'), color=KeyboardButtonColor.NEGATIVE)
            .add(Text('‚≠ê'), color=KeyboardButtonColor.POSITIVE)
            .row()
            .add(Text('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å ‚≠ê'), color=KeyboardButtonColor.POSITIVE)))
        await vk.state_dispenser.set(message.peer_id, CreateAnketa.SEARCH)
        return "–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–∞–Ω–Ω—ã—Ö"


# ==========================================================
# ====================== –ü–†–ò–í–ï–¢–°–¢–í–ò–ï =======================
# ==========================================================
@vk.on.private_message(text=['–ù–∞—á–∞—Ç—å', '–ü—Ä–∏–≤–µ—Ç', "a"])
async def menu(message: Message):
    insert_new_user(message.from_id)
    await message.answer(
        message="–ü—Ä–∏–≤–µ—Ç, –Ω–∞–π–¥–∏ —Å–µ–±–µ –∫–æ–≥–æ-–Ω–∏–±—É–¥—åü§≠",
        keyboard=(Keyboard(one_time=False, inline=False)
                  .add(Text('–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ üîé'), color=KeyboardButtonColor.SECONDARY)))


vk.run_forever()
